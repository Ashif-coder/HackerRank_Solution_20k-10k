#!/bin/python3

import math
import os
import random
import re
import sys
from collections import defaultdict
#
# Complete the 'sherlockAndAnagrams' function below.
#
# The function is expected to return an INTEGER.
# The function accepts STRING s as parameter.
#

def sherlockAndAnagrams(s):
    substring_freq = defaultdict(int)
    count = 0
    for i in range(len(s)):
        for j in range(i, len(s)):
            sorted_substring = tuple(sorted(s[i:j+1]))
            substring_freq[sorted_substring] += 1

    # Count the number of anagram pairs
    for freq in substring_freq.values():
        count += (freq * (freq - 1)) // 2

    return count

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    q = int(input().strip())

    for q_itr in range(q):
        s = input()

        result = sherlockAndAnagrams(s)

        fptr.write(str(result) + '\n')

    fptr.close()
