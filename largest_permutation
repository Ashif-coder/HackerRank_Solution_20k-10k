#!/bin/python3

import math
import os
import random
import re
import sys
import heapq
#
# Complete the 'largestPermutation' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts following parameters:
#  1. INTEGER k
#  2. INTEGER_ARRAY arr
#

def largestPermutation(k, arr):
    n = len(arr)
    index_map = {arr[i]: i for i in range(n)}
    largest_num = n
    i = 0

    while k > 0 and i < n:
        current_num = arr[i]

        if current_num != largest_num:
            arr[i] = largest_num
            arr[index_map[largest_num]] = current_num
            index_map[current_num] = index_map[largest_num]
            index_map[largest_num] = i
            k -= 1

        largest_num -= 1
        i += 1

    return arr



if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    k = int(first_multiple_input[1])

    arr = list(map(int, input().rstrip().split()))

    result = largestPermutation(k, arr)

    fptr.write(' '.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
